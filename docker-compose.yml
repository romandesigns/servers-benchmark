services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--storage.tsdb.retention.time=6h"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.listen-address=:9090"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
      - "--web.enable-remote-write-receiver"
    ports:
      - "9090:9090"
    networks:
      - db-network

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "9001:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - db-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    privileged: true
    networks:
      - db-network

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    networks:
      - db-network

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log
    networks:
      - db-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - db-network

  psql-database:
    container_name: psql-database
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: dailytasks
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - db-network

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - db-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: rsteam@ketchup.com
      PGADMIN_DEFAULT_PASSWORD: rsteam
    ports:
      - "5050:80"
    volumes:
      - pgadmin-config:/var/lib/pgadmin
    depends_on:
      - psql-database
    networks:
      - db-network

  dotnet-api:
    # build:
    #   context: ./dotnet
    #   dockerfile: Dockerfile
    image: creativewebdev/servers-benchmark:dotnet-api
    environment:
      DOTNET_RUNNING_IN_CONTAINER: "true"
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "8080:8080"
    depends_on:
      - psql-database
    networks:
      - db-network
    mem_limit: 384m
    cpus: 0.75

  bun-elysia:
    # build:
    #   context: ./bun-elysia
    image: creativewebdev/servers-benchmark:bun-elysia
    environment:
      PORT: 6485
      PSQL_HOST: psql-database
      PSQL_DB: dailytasks
      PSQL_USER: postgres
      PSQL_PASSWORD: root
      PSQL_PORT: 5432
    ports:
      - "6485:6485"
    depends_on:
      - psql-database
    networks:
      - db-network
    mem_limit: 384m
    cpus: 0.75

  bun-hono:
    # build:
    #   context: ./bun-hono
    image: creativewebdev/servers-benchmark:bun-hono
    environment:
      PORT: 1103
      PSQL_HOST: psql-database
      PSQL_DB: dailytasks
      PSQL_USER: postgres
      PSQL_PASSWORD: root
      PSQL_PORT: 5432
    ports:
      - "1103:1103"
    depends_on:
      - psql-database
    networks:
      - db-network
    mem_limit: 384m
    cpus: 0.75

  node-express:
    # build:
    #   context: ./node-express
    image: creativewebdev/servers-benchmark:node-express
    environment:
      PORT: 6582
      PSQL_HOST: psql-database
      PSQL_DB: dailytasks
      PSQL_USER: postgres
      PSQL_PASSWORD: root
      PSQL_PORT: 5432
    ports:
      - "6582:6582"
    depends_on:
      - psql-database
    networks:
      - db-network
    mem_limit: 384m
    cpus: 0.75

  node-fastify:
    # build:
    #   context: ./node-fastify
    image: creativewebdev/servers-benchmark:node-fastify
    environment:
      PORT: 3000
      PSQL_HOST: psql-database
      PSQL_DB: dailytasks
      PSQL_USER: postgres
      PSQL_PASSWORD: root
      PSQL_PORT: 5432
    ports:
      - "3000:3000"
    depends_on:
      - psql-database
    networks:
      - db-network
    mem_limit: 384m
    cpus: 0.75

volumes:
  pgdata:
  pgadmin-config:
  grafana-data:
  portainer-data:

networks:
  db-network:
    driver: bridge
